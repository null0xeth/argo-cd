# imagePullSecrets is a special helm field which, when specified, creates a secret
# containing the pull secret which is used to pull all images deployed by this helm chart and the resulting operator.
# this field is a map where the key is the desired secret name and the value is the contents of the imagePullSecret.
#
# Example: --set-file imagePullSecrets.gcr=./pull-secret.json
imagePullSecrets: {}

# Configures general installation parameters for Calico. Schema is based
# on the operator.tigera.io/Installation API documented
# here: https://docs.tigera.io/calico/latest/reference/installation/api#operator.tigera.io/v1.InstallationSpec
installation:
  enabled: true
  cni:
    type: Calico
  calicoNetwork:
    mtu: 8950
    bgp: Disabled
    linuxDataplane: BPF
    ipPools:
      - cidr: 192.168.155.20/24
        encapsulation: VXLANCrossSubnet
        natOutgoing: Enabled

  # imagePullSecrets are configured on all images deployed by the tigera-operator.
  # secrets specified here must exist in the tigera-operator namespace; they won't be created by the operator or helm.
  # imagePullSecrets are a slice of LocalObjectReferences, which is the same format they appear as on deployments.
  #
  # Example: --set installation.imagePullSecrets[0].name=my-existing-secret
  imagePullSecrets: []

# Configures general installation parameters for Calico. Schema is based
# on the operator.tigera.io/Installation API documented
# here: https://docs.tigera.io/calico/latest/reference/installation/api#operator.tigera.io/v1.APIServerSpec
apiServer:
  enabled: true

# Custom annotations for the tigera/operator pod itself
podAnnotations: {}

# Custom labels for the tigera/operator pod itself
podLabels: {}

# Configuration for the tigera operator images to deploy.
tigeraOperator:
  image: tigera/operator
  registry: quay.io
calicoctl:
  image: docker.io/calico/ctl

# Optionally configure the host and port used to access the Kubernetes API server.
kubernetesServiceEndpoint:
  host: "k8s.honker.dev"
  port: "6443"

defaultFelixConfiguration:
  enabled: true
  vxlanEnabled: true
  vxlanVNI: 4069
  xdpEnabled: true
  bpfExternalServiceMode": "DSR"
  bpEnabled: true
