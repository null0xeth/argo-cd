apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: istio-system
    app.kubernetes.io/part-of: prometheus-operator
    app.kubernetes.io/version: 2.53.0
    prometheus: prometheus-istio-system
    role: recording-rules
  name: istio-metrics-aggregation
  namespace: istio-system
spec:
  groups:
    - name: "istio.metricsAggregation-rules"
      interval: 5s
      rules:
        - record: "workload:istio_requests_total"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_requests_total)"

        - record: "workload:istio_request_duration_milliseconds_count"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_duration_milliseconds_count)"
        - record: "workload:istio_request_duration_milliseconds_sum"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_duration_milliseconds_sum)"
        - record: "workload:istio_request_duration_milliseconds_bucket"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_duration_milliseconds_bucket)"

        - record: "workload:istio_request_bytes_count"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_bytes_count)"
        - record: "workload:istio_request_bytes_sum"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_bytes_sum)"
        - record: "workload:istio_request_bytes_bucket"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_bytes_bucket)"

        - record: "workload:istio_response_bytes_count"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_response_bytes_count)"
        - record: "workload:istio_response_bytes_sum"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_response_bytes_sum)"
        - record: "workload:istio_response_bytes_bucket"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_response_bytes_bucket)"

        - record: "workload:istio_tcp_sent_bytes_total"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_sent_bytes_total)"
        - record: "workload:istio_tcp_received_bytes_total"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_received_bytes_total)"
        - record: "workload:istio_tcp_connections_opened_total"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_connections_opened_total)"
        - record: "workload:istio_tcp_connections_closed_total"
          expr: "sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_connections_closed_total)"
    - name: "istio.recording-rules"
      interval: 5s
      rules:
      - record: "istio:istio_requests:by_destination_service:rate1m"
        expr: |
          sum(irate(istio_requests_total{reporter="destination"}[1m]))
          by (
            destination_canonical_service,
            destination_workload_namespace
          )
      - record: "istio:istio_request_duration_milliseconds_bucket:p95:rate1m"
        expr: |
          histogram_quantile(0.95,
            sum(irate(istio_request_duration_milliseconds_bucket{reporter="source"}[1m]))
            by (
              destination_canonical_service,
              destination_workload_namespace,
              source_canonical_service,
              source_workload_namespace,
              le
            )
          )
