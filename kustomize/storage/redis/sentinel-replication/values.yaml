
global:
  defaultStorageClass: "longhorn"

architecture: replication

auth:
  enabled: true
  sentinel: true

  existingSecret: sentinel-redis-credentials
  existingSecretPasswordKey: "REDIS_PASSWORD"
  usePasswordFiles: false
  usePasswordFileFromSecret: true

master:
  count: 1
  automountServiceAccountToken: true

  extraVolumes: []
  extraVolumeMounts: []
  sidecars: []
  initContainers: []

  persistence:
    enabled: true
    path: /data
    storageClass: longhorn
    accessModes:
      - ReadWriteOnce
    size: 8Gi

    annotations: {}
    labels: {}
    selector: {}

  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain

  service:
    type: ClusterIP
    portNames:
      redis: "tcp-redis"
    ports:
      redis: 6379
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster

  serviceAccount:
    create: true
    name: ""
    automountServiceAccountToken: true
    annotations: {}

replica:
  kind: StatefulSet
  replicaCount: 3
  automountServiceAccountToken: true

  podLabels: {}
  podAnnotations: {}
  shareProcessNamespace: false

  podAffinityPreset: ""
  podAntiAffinityPreset: soft

  persistence:
    enabled: true
    path: /data
    storageClass: longhorn
    accessModes:
      - ReadWriteOnce
    size: 8Gi

  service:
    type: ClusterIP
    ports:
      redis: 6379
  ##
  serviceAccount:
    create: true
    name: ""
    automountServiceAccountToken: true
    annotations: {}

sentinel:
  enabled: true

  image:
    registry: docker.io
    repository: bitnami/redis-sentinel
    tag: 7.4.1-debian-12-r3
    digest: ""
    pullPolicy: IfNotPresent

  annotations: {}
  masterSet: sentinel-master-set

  persistence:
    enabled: false

  service:
    type: ClusterIP
    ports:
      redis: 6379
      sentinel: 26379
    createMaster: false

  masterService:
    enabled: false
    type: ClusterIP
    ports:
      redis: 6379

## @param serviceBindings.enabled Create secret for service binding (Experimental)
## Ref: https://servicebinding.io/service-provider/
##
serviceBindings:
  enabled: false

networkPolicy:
  enabled: true
  allowExternal: true
  allowExternalEgress: true

rbac:
  create: true
  rules:
    - apiGroups:
        - ""
      resources:
        - pods
      verbs:
        - get
        - list

serviceAccount:
  create: true
  automountServiceAccountToken: true

tls:
  enabled: true
  authClients: true
  autoGenerated: false
  existingSecret: ca-root
  certificatesSecret: ""
  certFilename: "tls.crt"
  certKeyFilename: "tls.key"
  certCAFilename: "ca.crt"

metrics:
  enabled: false

